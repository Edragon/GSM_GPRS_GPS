C51 COMPILER V9.01   MAIN                                                                  08/31/2016 11:08:35 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND PRINT(..\Listing\main.lst) OBJECT(..\Ou
                    -tput\main.obj)

line level    source

   1          /**********************************************************************************
   2           * 工程名  :发送文本信息
   3           * 描述    :向指定的手机号发送一条文本信息
   4           * 实验平台:STC12XX
   5           * 库版本  :
   6          **********************************************************************************/
   7          
   8          #include "string.h"
   9          #include "delay.h"
  10          #include "uart.h"
  11          
  12          
  13          #define Buf1_Max 60                                       //串口1缓存长度
  14          #define Buf2_Max 200                                      //串口2缓存长度
  15          /*************  本地常量声明    **************/
  16          sbit RUNING_LED = P2^1;                                 //运行指示灯
  17          
  18          
  19          static unsigned char *phone="\"13425087445\"";     //短信接收方手机号
  20          static unsigned char *content="SIM900A test";//发送短信内容
  21          /*************  本地变量声明    **************/
  22          
  23          xdata u8 Uart2_Buf[Buf2_Max];
  24          
  25          u8 Times=0,First_Int = 0,shijian=0;
  26          //u8 Time_count=0;
  27          bdata u8 Flag;//定时器标志位
  28          sbit Timer0_start =Flag^0;      //定时器0延时启动计数器
  29          sbit Uart2_Start  =Flag^1;      //串口2开始接收数据
  30          sbit Uart2_End          =Flag^2;        //串口2接收数据结束
  31          
  32          
  33          /*************  本地函数声明    **************/
  34          void GPIO_config(void);
  35          void Timer0Init(void);
  36          void CLR_Buf2(void);
  37          u8 Find(u8 *a);
  38          void Second_AT_Command(u8 *b,u8 *a,u8 wait_time);
  39          void Set_Text_Mode(void);
  40          void Wait_CREG(void);
  41          void Send_Text_Sms(void);
  42          /*************  外部函数和变量声明*****************/
  43          
  44          /*******************************************************************************
  45          * 函数名 : main 
  46          * 描述   : 主函数
  47          * 输入   : 
  48          * 输出   : 
  49          * 返回   : 
  50          * 注意   : 串口2负责与GPRS模块通信，串口1用于串口调试，可以避免在下载程序时数据
  51                                                   还发送到模块
  52          *******************************************************************************/
  53          void main(void)
  54          {
C51 COMPILER V9.01   MAIN                                                                  08/31/2016 11:08:35 PAGE 2   

  55   1              GPIO_config();
  56   1              Uart2Init();
  57   1              Timer0Init();
  58   1              EA=1;   //开总中断
  59   1              Wait_CREG();    //查询等待模块注册成功
  60   1              Set_Text_Mode();//设置短信为TEXT模式
  61   1              Send_Text_Sms();//发送一条短消息
  62   1              while(1)
  63   1              {
  64   2                      ;
  65   2              }       
  66   1      }
  67          /*******************************************************************************
  68          * 函数名 : Uart1 
  69          * 描述   : 串口1中断服务入口函数
  70          * 输入   : 
  71          * 输出   : 
  72          * 返回   : 
  73          * 注意   : 
  74          *******************************************************************************/
  75          void Uart1() interrupt 4
  76          {
  77   1          if (RI)
  78   1          {
  79   2              RI = 0;                 //清除RI位
  80   2          }
  81   1          if (TI)
  82   1          {
  83   2              TI = 0;                 //清除TI位
  84   2          }
  85   1      }
  86          
  87          /*******************************************************************************
  88          * 函数名 : Uart2
  89          * 描述   : 串口2中断服务入口函数
  90          * 输入   : 
  91          * 输出   : 
  92          * 返回   : 
  93          * 注意   : 
  94          *******************************************************************************/
  95          void Uart2() interrupt 8
  96          {
  97   1                      IE2  &= ~0x01;   //关闭串口2中断
  98   1          if (S2CON & S2RI)
  99   1          {
 100   2            S2CON &= ~S2RI;         //清除S2RI位
 101   2                              Uart2_Buf[First_Int] = S2BUF;     //将接收到的字符串存到缓存中
 102   2                              First_Int++;                                    //缓存指针向后移动
 103   2                              if(First_Int > Buf2_Max)                //如果缓存满,将缓存指针指向缓存的首地址
 104   2                              {
 105   3                                      First_Int = 0;
 106   3                              }
 107   2          }
 108   1          if (S2CON & S2TI)
 109   1          {
 110   2            S2CON &= ~S2TI;         //清除S2TI位
 111   2          }
 112   1                      IE2  |= 0x01;   //使能串口2中断
 113   1      }
 114          /*******************************************************************************
 115          * 函数名 : Timer0_ISR
 116          * 描述   : 定时器0中断服务入口函数,20ms中断一次
C51 COMPILER V9.01   MAIN                                                                  08/31/2016 11:08:35 PAGE 3   

 117          * 输入   : 
 118          * 输出   : 
 119          * 返回   : 
 120          * 注意   : 
 121          *******************************************************************************/
 122          void Timer0_ISR() interrupt 1
 123          {
 124   1              static u8 Time_count=0; 
 125   1              TR0=0;//关定时器
 126   1              Time_count++;
 127   1              if(Time_count>=50)
 128   1              {
 129   2                      Time_count = 0;
 130   2                      RUNING_LED =~RUNING_LED;
 131   2              }
 132   1              if(Timer0_start)
 133   1              Times++;
 134   1              if(Times > (50*shijian))
 135   1              {
 136   2                      Timer0_start = 0;
 137   2                      Times = 0;
 138   2              }
 139   1              TR0=1;//开定时器
 140   1      }
 141          /*******************************************************************************
 142          * 函数名 : GPIO_config
 143          * 描述   : IO口配置函数
 144          * 输入   : 
 145          * 输出   : 
 146          * 返回   : 
 147          * 注意   : 
 148          *******************************************************************************/
 149          void    GPIO_config(void)
 150          {
 151   1                      P3M1 &= 0XC3;  //配置P32~P35为推挽输出
 152   1                      P3M0 |= ~0XC3;
 153   1                      RUNING_LED=0;
 154   1      }
 155          void Timer0Init(void)           //20毫秒@22.1184MHz
 156          {
 157   1              AUXR &= 0x7F;   //12T模式
 158   1              TMOD &= 0xF0;   //设置定时器模式 16位重载
 159   1              TL0 = 0x00;             //设定定时器初值
 160   1              TH0 = 0x70;             //设定定时器初值
 161   1              TF0 = 0;                        //清除TF0标志
 162   1              TR0 = 1;                        //定时器0开始计时
 163   1              ET0 = 1;        //使能定时器0中断
 164   1      }
 165          /*******************************************************************************
 166          * 函数名 : CLR_Buf2
 167          * 描述   : 清除串口2缓存数据
 168          * 输入   : 
 169          * 输出   : 
 170          * 返回   : 
 171          * 注意   : 
 172          *******************************************************************************/
 173          void CLR_Buf2(void)
 174          {
 175   1              u16 k;
 176   1              for(k=0;k<Buf2_Max;k++)      //将缓存内容清零
 177   1              {
 178   2                      Uart2_Buf[k] = 0x00;
C51 COMPILER V9.01   MAIN                                                                  08/31/2016 11:08:35 PAGE 4   

 179   2              }
 180   1          First_Int = 0;              //接收字符串的起始存储位置
 181   1      }
 182          
 183          /*******************************************************************************
 184          * 函数名 : Find
 185          * 描述   : 判断缓存中是否含有指定的字符串
 186          * 输入   : 
 187          * 输出   : 
 188          * 返回   : unsigned char:1 找到指定字符，0 未找到指定字符 
 189          * 注意   : 
 190          *******************************************************************************/
 191          
 192          u8 Find(u8 *a)
 193          { 
 194   1        if(strstr(Uart2_Buf,a)!=NULL)
 195   1                  return 1;
 196   1              else
 197   1                              return 0;
 198   1      }
 199          
 200          /*******************************************************************************
 201          * 函数名 : Second_AT_Command
 202          * 描述   : 发送AT指令函数
 203          * 输入   : 发送数据的指针、发送等待时间(单位：S)
 204          * 输出   : 
 205          * 返回   : 
 206          * 注意   : 
 207          *******************************************************************************/
 208          
 209          void Second_AT_Command(u8 *b,u8 *a,u8 wait_time)         
 210          {
 211   1              u8 i;
 212   1              u8 *c;
 213   1              c = b;                                                                          //保存字符串地址到c
 214   1              CLR_Buf2(); 
 215   1        i = 0;
 216   1              while(i == 0)                    
 217   1              {
 218   2                      if(!Find(a))           //查找需要应答的字符
 219   2                      {
 220   3                              if(Timer0_start == 0)//超时重新发送命令
 221   3                              {
 222   4                                      b = c;                                           //将字符串地址给b
 223   4                                      for (b; *b!='\0';b++)
 224   4                                      {
 225   5                                              UART2_SendData(*b);
 226   5                                      }
 227   4                                      UART2_SendLR(); 
 228   4                                      Times = 0;
 229   4                                      shijian = wait_time;
 230   4                                      Timer0_start = 1;  //开始计时
 231   4                         }
 232   3          }
 233   2                else
 234   2                      {
 235   3                              i = 1;
 236   3                              Timer0_start = 0;  
 237   3                      }
 238   2              }
 239   1              CLR_Buf2(); 
 240   1      }
C51 COMPILER V9.01   MAIN                                                                  08/31/2016 11:08:35 PAGE 5   

 241          
 242          /*******************************************************************************
 243          * 函数名 : Set_Text_Mode
 244          * 描述   : 设置短信为TEXT文本模式
 245          * 输入   : 
 246          * 输出   : 
 247          * 返回   : 
 248          * 注意   : 
 249          *******************************************************************************/
 250          void Set_Text_Mode(void)
 251          {       
 252   1              Second_AT_Command("ATE0","OK",3);                                                                               //取消回显      
 253   1              Second_AT_Command("AT+CMGF=1","OK",3);                                                          //TEXT模式      
 254   1              Second_AT_Command("AT+CPMS=\"SM\",\"SM\",\"SM\"","OK",3);//所有操作都在SIM卡中进行      
 255   1              Second_AT_Command("AT+CSCA?","+CSCA",3);//设置短信中心号
 256   1      }
 257          /*******************************************************************************
 258          * 函数名 : Send_Text_Sms
 259          * 描述   : 发送TEXT文本短信
 260          * 输入   : 
 261          * 输出   : 
 262          * 返回   : 
 263          * 注意   : 
 264          *******************************************************************************/
 265          void Send_Text_Sms(void)
 266          {
 267   1              unsigned char temp[50]="AT+CMGS=";
 268   1              
 269   1              strcat(temp,phone); //字符串拼接函数（库函数）
 270   1              Second_AT_Command(temp,">",3); //等待接收到“>”才发送短信内容
 271   1              UART2_SendString(content);     //发送短信内容
 272   1              UART2_SendData(0X1A);          //发送结束符
 273   1      }
 274          /*******************************************************************************
 275          * 函数名 : Wait_CREG
 276          * 描述   : 等待模块注册成功
 277          * 输入   : 
 278          * 输出   : 
 279          * 返回   : 
 280          * 注意   : 
 281          *******************************************************************************/
 282          void Wait_CREG(void)
 283          {
 284   1              u8 i;
 285   1              u8 k;
 286   1              i = 0;
 287   1              CLR_Buf2();
 288   1        while(i == 0)                         
 289   1              {
 290   2                      CLR_Buf2();        
 291   2                      UART2_SendString("AT+CREG?");//查询模块网络注册状态
 292   2                      UART2_SendLR();
 293   2                      delay_ms(5000);                                                 
 294   2                  for(k=0;k<Buf2_Max;k++)                             
 295   2              {
 296   3                              if(Uart2_Buf[k] == ':')
 297   3                              {
 298   4                                      if((Uart2_Buf[k+4] == '1')||(Uart2_Buf[k+4] == '5')) //表明网络注册成功
 299   4                                      {
 300   5                                              i = 1;
 301   5                                        break;
 302   5                                      }
C51 COMPILER V9.01   MAIN                                                                  08/31/2016 11:08:35 PAGE 6   

 303   4                              }
 304   3                      }
 305   2              }
 306   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    602    ----
   CONSTANT SIZE    =    144    ----
   XDATA SIZE       =    200    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11      66
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
