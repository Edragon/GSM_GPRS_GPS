C51 COMPILER V9.01   MAIN                                                                  03/28/2017 13:53:23 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND PRINT(..\Listing\main.lst) OBJECT(..\Ou
                    -tput\main.obj)

line level    source

   1          /**********************************************************************************
   2          
   3           * 软件功能说明
   4             板子上电后运行指示灯RUNING_LED会以一秒的频率闪烁
   5                   服务器发送“onled”点亮LED；
   6             服务器发送“offled”熄灭LED；
   7                   单片机每隔10秒会向服务器发送心跳帧“OK”
   8          **********************************************************************************/
   9          #include "config.h"
  10          #include "string.h"
  11          #include "delay.h"
  12          #include "uart.h"
  13          
  14          #define Buf1_Max 200                                      //串口2缓存长度
  15          /*************  本地常量声明    **************/
  16          
  17          static unsigned char *phone="\"17086558896\"";     //短信接收方手机号  ，实际应用中只需要改这个号码即可
  18          /*************  本地变量声明    **************/
  19          xdata u8 Uart1_Buf[Buf1_Max];
  20          xdata unsigned char content[100]="UNV-SIM808-GPS-TEST";//发送短信内容
  21          u8 Times=0,First_Int = 0,shijian=0;
  22          u8 key_buf=0;
  23          char *p2;
  24          //u8 Time_count=0;
  25          bdata u8 Flag;//定时器标志位
  26          sbit Timer0_start =Flag^0;      //定时器0延时启动计数器
  27          sbit Heart_beat         =Flag^1;        //发送心跳帧标志位
  28          sbit KEY        = P3^5;         //按键          ,低电平触发
  29          sbit RUNING_LED =P1^0;
  30          
  31          
  32          /*************  本地函数声明    **************/
  33          void GPIO_config(void);
  34          void Timer0Init(void);
  35          void CLR_Buf2(void);
  36          u8 Find(u8 *a);
  37          void Second_AT_Command(u8 *b,u8 *a,u8 wait_time);
  38          void Wait_CREG(void);
  39          
  40          /*******************************************************************************
  41          * 函数名 : Uart1 
  42          * 描述   : 串口1中断服务入口函数
  43          * 输入   : 
  44          * 输出   : 
  45          * 返回   : 
  46          * 注意   : 
  47          *******************************************************************************/
  48          void Uart1() interrupt 4
  49          {
  50   1          if (RI)
  51   1          {
  52   2              RI = 0;                           //清除RI位
  53   2                      Uart1_Buf[First_Int] = SBUF;      //将接收到的字符串存到缓存中
  54   2                      First_Int++;                                    //缓存指针向后移动
C51 COMPILER V9.01   MAIN                                                                  03/28/2017 13:53:23 PAGE 2   

  55   2                      if(First_Int > Buf1_Max)                //如果缓存满,将缓存指针指向缓存的首地址
  56   2                      {
  57   3                              First_Int = 0;
  58   3                      }
  59   2          }
  60   1          if (TI)
  61   1          {
  62   2              TI = 0;                          //清除TI位
  63   2          }
  64   1      }
  65          /*******************************************************************************
  66          * 函数名 : Timer0Init
  67          * 描述   : 定时器0初始化，20ms定时
  68          * 输入   : 
  69          * 输出   : 
  70          * 返回   : 
  71          * 注意   : 
  72          *******************************************************************************/
  73          void Timer0Init(void)           //20毫秒@11.0592MHz
  74          {
  75   1              AUXR &= 0x7F;           //定时器时钟12T模式
  76   1              TMOD &= 0xF0;           //
  77   1              TMOD |= 0x01;           //设置定时器模式，16位定时器
  78   1              TL0 = 0x00;               //设置定时器初值
  79   1              TH0 = 0xB8;               //设置定时器初值
  80   1              TF0 = 0;                    //清TF0标志
  81   1              TR0 = 1;                    //定时器0开始计时
  82   1              ET0 = 1;          //使能定时器0中断
  83   1      }
  84          /*******************************************************************************
  85          * 函数名 : Timer0_ISR
  86          * 描述   : 定时器0中断服务入口函数,20ms中断一次
  87          * 输入   : 
  88          * 输出   : 
  89          * 返回   : 
  90          * 注意   : 
  91          *******************************************************************************/
  92          void Timer0_ISR() interrupt 1
  93          {
  94   1              static u8 Time_count=0; 
  95   1              TR0=0;//关定时器
  96   1              TL0 = 0x00;             //重设定时器初值
  97   1              TH0 = 0xB8;             //重设定时器初值
  98   1              Time_count++;
  99   1              if(Time_count>=50)//1秒运行指示灯闪烁
 100   1              {
 101   2                      Time_count = 0;
 102   2                      RUNING_LED =~RUNING_LED;
 103   2              }
 104   1              if(count_20ms) //20ms延时计数器
 105   1                      count_20ms--;
 106   1      
 107   1              if(Timer0_start)
 108   1              Times++;
 109   1              if(Times > (50*shijian))
 110   1              {
 111   2                      Timer0_start = 0;
 112   2                      Times = 0;
 113   2              }
 114   1              TR0=1;//开定时器
 115   1      }
 116          /*******************************************************************************
C51 COMPILER V9.01   MAIN                                                                  03/28/2017 13:53:23 PAGE 3   

 117          * 函数名 : CLR_Buf1
 118          * 描述   : 清除串口2缓存数据
 119          * 输入   : 
 120          * 输出   : 
 121          * 返回   : 
 122          * 注意   : 
 123          *******************************************************************************/
 124          void CLR_Buf1(void)
 125          {
 126   1              u16 k;
 127   1              for(k=0;k<Buf1_Max;k++)      //将缓存内容清零
 128   1              {
 129   2                      Uart1_Buf[k] = 0x00;
 130   2              }
 131   1          First_Int = 0;             //接收字符串的起始存储位置
 132   1      }
 133          /*******************************************************************************
 134          * 函数名 : Wait_CREG
 135          * 描述   : 等待模块注册成功
 136          * 输入   : 
 137          * 输出   : 
 138          * 返回   : 
 139          * 注意   : 
 140          *******************************************************************************/
 141          void Wait_CREG(void)
 142          {
 143   1              u8 i;
 144   1              u8 k;
 145   1              i = 0;
 146   1              CLR_Buf1();
 147   1              while(i == 0)                           
 148   1              {
 149   2                      CLR_Buf1();        
 150   2                      UART1_SendString("AT+CREG?");
 151   2                      UART1_SendLR();
 152   2                      delay_ms(250);                                                  
 153   2                  for(k=0;k<Buf1_Max;k++)                             
 154   2              {
 155   3                              if(Uart1_Buf[k] == ':')
 156   3                              {
 157   4                                      if((Uart1_Buf[k+4] == '1')||(Uart1_Buf[k+4] == '5'))
 158   4                                      {
 159   5                                              i = 1;
 160   5                                        break;
 161   5                                      }
 162   4                              }
 163   3                      }
 164   2              }
 165   1      }
 166          /*******************************************************************************
 167          * 函数名 : Find
 168          * 描述   : 判断缓存中是否含有指定的字符串
 169          * 输入   : 
 170          * 输出   : 
 171          * 返回   : unsigned char:1 找到指定字符，0 未找到指定字符 
 172          * 注意   : 
 173          *******************************************************************************/
 174          u8 Find(u8 *a)
 175          { 
 176   1        if(strstr(Uart1_Buf,a)!=NULL)
 177   1                  return 1;
 178   1              else
C51 COMPILER V9.01   MAIN                                                                  03/28/2017 13:53:23 PAGE 4   

 179   1                      return 0;
 180   1      }
 181          /*******************************************************************************
 182          * 函数名 : Second_AT_Command
 183          * 描述   : 发送AT指令函数
 184          * 输入   : 发送数据的指针、发送等待时间(单位：S)
 185          * 输出   : 
 186          * 返回   : 
 187          * 注意   : 
 188          *******************************************************************************/
 189          void Second_AT_Command(u8 *b,u8 *a,u8 wait_time)         
 190          {
 191   1              u8 i;
 192   1              u8 *c;
 193   1              c = b;                                                                          //保存字符串地址到c
 194   1              CLR_Buf1(); 
 195   1              i = 0;
 196   1              while(i == 0)                    
 197   1              {
 198   2                      if(!Find(a)) 
 199   2                      {
 200   3                              if(Timer0_start == 0)
 201   3                              {
 202   4                                      b = c;                                                  //将字符串地址给b
 203   4                                      for (b; *b!='\0';b++)
 204   4                                      {
 205   5                                              UART1_SendData(*b);
 206   5                                      }
 207   4                                      UART1_SendLR(); 
 208   4                                      Times = 0;
 209   4                                      shijian = wait_time;
 210   4                                      Timer0_start = 1;
 211   4                         }
 212   3                      }
 213   2                      else
 214   2                      {
 215   3                              i = 1;
 216   3                              Timer0_start = 0;
 217   3                      }
 218   2              }
 219   1              //CLR_Buf1(); 
 220   1      }
 221          
 222          void Set_Text_Mode(void)
 223          {
 224   1              //unsigned char temp[25]="AT+CSCA=";
 225   1              Second_AT_Command("ATE1","OK",3);                                                                       //取消回显      
 226   1              Second_AT_Command("AT+CMGF=1","OK",3);                                                          //TEXT模式      
 227   1              Second_AT_Command("AT+CSCS=\"GSM\"","OK",3);                                                            
 228   1              Second_AT_Command("AT+CSMP=17,167,0,241","OK",3);               
 229   1              Second_AT_Command("AT+CSCA?","OK",3);//设置短信中心号
 230   1      }
 231          
 232          void Send_Text_Sms(u8 *temp_data)
 233          {
 234   1              unsigned char temp[50]="AT+CMGS=";
 235   1              
 236   1              strcat(temp,phone); //字符串拼接函数（库函数）
 237   1              Second_AT_Command(temp,">",3); //等待接收到“>”才发送短信内容
 238   1              UART1_SendString(temp_data);     //发送短信内容
 239   1              UART1_SendData(0X1A);          //发送结束符     
 240   1      }
C51 COMPILER V9.01   MAIN                                                                  03/28/2017 13:53:23 PAGE 5   

 241          u8 GPS_Datt_handle(void)
 242          {       
 243   1              content[0]=0;//添加字符串结束符
 244   1              strcat(content,"GPS data:");
 245   1              Second_AT_Command("AT+CGNSINF\r\n","OK",3);
 246   1              if((p2=(char*)strstr(Uart1_Buf,"OK")),(p2!=NULL))//寻找结束符
 247   1              {
 248   2                      *p2=0;//添加结束符
 249   2                      p2=strtok(Uart1_Buf,",");
 250   2                      if(p2==NULL) return 1;
 251   2                      p2=(char*)strtok(NULL,",");
 252   2                      if(p2==NULL) return 2;
 253   2                      p2=(char*)strtok(NULL,",");
 254   2                      if(p2==NULL) return 3;
 255   2                      //UART1_SendString("时间:");UART1_SendString((char *)p2);UART1_SendLR();
 256   2                      //strcat(content,"TIME:");
 257   2                      //strcat(content,(char *)p2);
 258   2                      p2=(char*)strtok(NULL,",");
 259   2                      if(p2==NULL) return 4;
 260   2                      //UART1_SendString("纬度:");UART1_SendString((char *)p2);UART1_SendLR();
 261   2                      strcat(content,"latitude:N");
 262   2                      strcat(content,(char *)p2);
 263   2                      p2=(char*)strtok(NULL,",");
 264   2                      if(p2==NULL) return 5;
 265   2                      //UART1_SendString("经度:");UART1_SendString((char *)p2);UART1_SendLR();
 266   2                      strcat(content,"longitude:E");
 267   2                      strcat(content,(char *)p2);
 268   2                      p2=(char*)strtok(NULL,",");
 269   2                      if(p2==NULL) return 6;
 270   2                      //UART1_SendString("海拔:");UART1_SendString((char *)p2);UART1_SendLR();
 271   2                      strcat(content,"elevation:");
 272   2                      strcat(content,(char *)p2);//UART1_SendString((char *)content);                                                 
 273   2                      //delay_ms(1000); 
 274   2                      CLR_Buf1();     
 275   2                      return 0;
 276   2              }
 277   1              return 7;
 278   1      }
 279           /*******************************************************************************
 280          * 函数名 : main 
 281          * 描述   : 主函数
 282          * 输入   : 
 283          * 输出   : 
 284          * 返回   : 
 285          * 注意   : 串口波特率是9600，GPRS模块默认波特率是115200，需要自己通过串口助手修改
 286                                             为9600方可使用。
 287          *******************************************************************************/
 288          void main(void)
 289          {       
 290   1              Timer0Init();  //初始化定时器0
 291   1              EA=1;   //开总中断
 292   1              Uart1Init();    //初始化串口9600
 293   1      
 294   1              Wait_CREG();    //查询等待模块注册成功
 295   1              Set_Text_Mode();//设置短信为TEXT模式             
 296   1              
 297   1              Second_AT_Command("AT+CGNSPWR=1\r\n","OK",2);   //打开GPS电源
 298   1      //      delay_ms(100); 
 299   1      //      Second_AT_Command("AT+CGNSSEQ=\"RMC\"\r\n","OK",2);//定义NMEA解析
 300   1      //      Second_AT_Command("AT+CGNSINF\r\n","+CGNSINF: 1,1,",3);//等待定位成功
 301   1      //      Second_AT_Command("AT+CGNSURC=0\r\n","OK",1); //设置GPS输出参数
 302   1      //      CLR_Buf1();
C51 COMPILER V9.01   MAIN                                                                  03/28/2017 13:53:23 PAGE 6   

 303   1              Send_Text_Sms("UNV-SIM808-TEST");//发送问候信息
 304   1              while(1)
 305   1              {
 306   2                      if(!KEY)delay_ms(10);
 307   2                      {
 308   3                              if((KEY==0))//按键按下
 309   3                              {                                                               
 310   4                                      if(!GPS_Datt_handle())
 311   4                                              Send_Text_Sms(content);//发送定位信息                           
 312   4                              }
 313   3                      }               
 314   2              }
 315   1      }
 316          
 317          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1062    ----
   CONSTANT SIZE    =    227    ----
   XDATA SIZE       =    300    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      69
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
