C51 COMPILER V9.01   UART                                                                  07/02/2016 13:16:06 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart.c DEBUG OBJECTEXTEND PRINT(..\Listing\uart.lst) OBJECT(..\uart.obj)

line level    source

   1          #include "uart.h"
   2          
   3          void Uart1Init(void)            //115200bps@22.1184MHz
   4          {
   5   1      /*      SCON = 0x50;            //8位数据，可变波特率
   6   1              AUXR |= 0x40;           //1T模式
   7   1              AUXR &= 0xFE;           //选择定时器1为波特率发生器
   8   1              TMOD &= 0x0F;           //设定定时器1为16位自动重载
   9   1              TL1 = 0xD0;                     //设定定时器初值
  10   1              TH1 = 0xFF;                     //设定定时器初值
  11   1              ET1 = 0;                                //禁止定时器1中断
  12   1              TR1 = 1;                                //启动定时器1
  13   1              ES = 1; */                              //使能串口1中断
  14   1          S3CON = 0x50;               //8位可变波特率
  15   1          T3L = 0XD0;                                                                 //设定定时器初值
  16   1          T3H = 0XFF;                                                                 //设定定时器初值
  17   1          T4T3M |= 0x02;              //定时器3为1T模式
  18   1          T4T3M |= 0x08;              //定时器3开始计时
  19   1          IE2 = 0x08;                 //使能串口3中断
  20   1          EA = 1;
  21   1      }
  22          
  23          void Uart2Init(void)            //115200bps@22.1184MHz
  24          {
  25   1              S2CON = 0x50;           //8位数据，可变波特率
  26   1              AUXR |= 0x04;           //1T模式
  27   1              T2L = 0xD0;                     //设定定时器初值
  28   1              T2H = 0xFF;                     //设定定时器初值
  29   1              AUXR |= 0x10;           //启动定时器2
  30   1              IE2  |= 0x01;   //使能串口2中断
  31   1      }
  32          /*----------------------------
  33          UART1 发送串口数据
  34          -----------------------------*/
  35          void UART1_SendData(u8 dat)
  36          {
  37   1      /*      ES=0;                                   //关串口中断
  38   1              SBUF=dat;                       
  39   1              while(TI!=1);   //等待发送成功
  40   1              TI=0;                                   //清除发送中断标志
  41   1              ES=1;   */                              //开串口中断
  42   1              EA=0;
  43   1              S3BUF=dat;                          //将要发送的数据放入串口数据缓冲区
  44   1              while(!(S3CON&0x02));   //等待发送完成
  45   1        S3CON=S3CON & 0xfd;     //清零S3TI    
  46   1              EA=1;
  47   1      }
  48          /*----------------------------
  49          UART1 发送字符串
  50          -----------------------------*/
  51          void UART1_SendString(char *s)
  52          {
  53   1              while(*s)//检测字符串结束符
  54   1              {
  55   2                      UART1_SendData(*s++);//发送当前字符
C51 COMPILER V9.01   UART                                                                  07/02/2016 13:16:06 PAGE 2   

  56   2              }
  57   1      }
  58          /*----------------------------
  59          UART2 发送串口数据
  60          -----------------------------*/
  61          void UART2_SendData(u8 dat)
  62          {
  63   1              IE2 &= ~0x01;                                   //关串口中断
  64   1              S2BUF=dat;                      
  65   1              while((S2CON&S2TI)!=S2TI);      //等待发送成功
  66   1              S2CON &= ~S2TI;                                 //清除发送中断标志
  67   1              IE2 = 0x01;                                     //开串口中断
  68   1      }
  69          /*----------------------------
  70          UART2 发送字符串
  71          -----------------------------*/
  72          void UART2_SendString(char *s)
  73          {
  74   1              while(*s)//检测字符串结束符
  75   1              {
  76   2                      UART2_SendData(*s++);//发送当前字符
  77   2              }
  78   1      }
  79          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    146    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
